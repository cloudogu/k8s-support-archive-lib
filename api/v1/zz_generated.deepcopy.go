//go:build !ignore_autogenerated

/*
This file was generated with "make generate".
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedContents) DeepCopyInto(out *ExcludedContents) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedContents.
func (in *ExcludedContents) DeepCopy() *ExcludedContents {
	if in == nil {
		return nil
	}
	out := new(ExcludedContents)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfig) DeepCopyInto(out *LoggingConfig) {
	*out = *in
	in.StartTime.DeepCopyInto(&out.StartTime)
	in.EndTime.DeepCopyInto(&out.EndTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfig.
func (in *LoggingConfig) DeepCopy() *LoggingConfig {
	if in == nil {
		return nil
	}
	out := new(LoggingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportArchive) DeepCopyInto(out *SupportArchive) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportArchive.
func (in *SupportArchive) DeepCopy() *SupportArchive {
	if in == nil {
		return nil
	}
	out := new(SupportArchive)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SupportArchive) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportArchiveList) DeepCopyInto(out *SupportArchiveList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SupportArchive, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportArchiveList.
func (in *SupportArchiveList) DeepCopy() *SupportArchiveList {
	if in == nil {
		return nil
	}
	out := new(SupportArchiveList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SupportArchiveList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportArchiveSpec) DeepCopyInto(out *SupportArchiveSpec) {
	*out = *in
	out.ExcludedContents = in.ExcludedContents
	in.LoggingConfig.DeepCopyInto(&out.LoggingConfig)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportArchiveSpec.
func (in *SupportArchiveSpec) DeepCopy() *SupportArchiveSpec {
	if in == nil {
		return nil
	}
	out := new(SupportArchiveSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportArchiveStatus) DeepCopyInto(out *SupportArchiveStatus) {
	*out = *in
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportArchiveStatus.
func (in *SupportArchiveStatus) DeepCopy() *SupportArchiveStatus {
	if in == nil {
		return nil
	}
	out := new(SupportArchiveStatus)
	in.DeepCopyInto(out)
	return out
}
